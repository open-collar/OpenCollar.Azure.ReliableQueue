{
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "OpenCollar.Azure.ReliableQueue This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Azure.ReliableQueue/"
  },
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "OpenCollar.Azure.ReliableQueue This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Azure.ReliableQueue/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. Related Projects OpenCollar.Azure.Storage OpenCollar.Azure.ReliableQueue OpenCollar.Extensions OpenCollar.Extensions.ApplicationInsights OpenCollar.Extensions.Collections OpenCollar.Extensions.Configuraton OpenCollar.Extensions.Environment OpenCollar.Extensions.IO OpenCollar.Extensions.Logging OpenCollar.Extensions.Security OpenCollar.Extensions.Threading OpenCollar.Extensions.Validation"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.TopicConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.TopicConverter.html",
    "title": "Class TopicConverter | API Documentation",
    "keywords": "Class TopicConverter Defines the TopicConverter . Inheritance System.Object Newtonsoft.Json.JsonConverter Newtonsoft.Json.JsonConverter < Topic > TopicConverter Inherited Members Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Namespace : OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class TopicConverter : JsonConverter<Topic> Properties | Improve this Doc View Source Instance Gets the Instance. Declaration [NotNull] public static TopicConverter Instance { get; } Property Value Type Description TopicConverter Methods | Improve this Doc View Source ReadJson(JsonReader, Type, Topic, Boolean, JsonSerializer) The ReadJson. Declaration public override Topic ReadJson(JsonReader reader, Type objectType, Topic existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. System.Type objectType Type of the object. Topic existingValue The existing value of object being read. If there is no existing value then null will be used. System.Boolean hasExistingValue The existing value has a value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Topic The object value. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, OpenCollar.Azure.ReliableQueue.Model.Topic, System.Boolean, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Topic, JsonSerializer) The WriteJson. Declaration public override void WriteJson(JsonWriter writer, Topic value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Topic value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.WriteJson(Newtonsoft.Json.JsonWriter, OpenCollar.Azure.ReliableQueue.Model.Topic, Newtonsoft.Json.JsonSerializer)"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.QueueKeyConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.QueueKeyConverter.html",
    "title": "Class QueueKeyConverter | API Documentation",
    "keywords": "Class QueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. Inheritance System.Object Newtonsoft.Json.JsonConverter Newtonsoft.Json.JsonConverter < QueueKey > QueueKeyConverter Inherited Members Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Namespace : OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class QueueKeyConverter : JsonConverter<QueueKey> Properties | Improve this Doc View Source Instance Gets a common instance of the converter that can be reused as necessary. Declaration [NotNull] public static QueueKeyConverter Instance { get; } Property Value Type Description QueueKeyConverter A common instance of the converter that can be reused as necessary. Methods | Improve this Doc View Source ReadJson(JsonReader, Type, QueueKey, Boolean, JsonSerializer) Reads the JSON representation of the object. Declaration public override QueueKey ReadJson(JsonReader reader, Type objectType, QueueKey existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. System.Type objectType Type of the object. QueueKey existingValue The existing value of object being read. If there is no existing value then null will be used. System.Boolean hasExistingValue The existing value has a value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description QueueKey The object value. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, OpenCollar.Azure.ReliableQueue.Model.QueueKey, System.Boolean, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException reader is null . | Improve this Doc View Source WriteJson(JsonWriter, QueueKey, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, QueueKey value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. QueueKey value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.WriteJson(Newtonsoft.Json.JsonWriter, OpenCollar.Azure.ReliableQueue.Model.QueueKey, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException writer is null . See Also QueueKey"
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueuesConfiguration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueuesConfiguration.html",
    "title": "Interface IReliableQueuesConfiguration | API Documentation",
    "keywords": "Interface IReliableQueuesConfiguration Defines the IReliableQueuesConfiguration . Inherited Members OpenCollar.Extensions.Configuration.IConfigurationObject.Delete() OpenCollar.Extensions.Configuration.IConfigurationObject.Load() OpenCollar.Extensions.Configuration.IConfigurationObject.Save() OpenCollar.Extensions.Configuration.IConfigurationObject.IsDirty System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Azure.ReliableQueue.Configuration Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueuesConfiguration : IConfigurationObject, IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source Queues Gets the Queues. Declaration [Path(PathIs.Absolute, \"ReliableQueues:Queues\")] IConfigurationDictionary<IReliableQueueConfiguration> Queues { get; } Property Value Type Description OpenCollar.Extensions.Configuration.IConfigurationDictionary < IReliableQueueConfiguration >"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.QueueKey.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.QueueKey.html",
    "title": "Class QueueKey | API Documentation",
    "keywords": "Class QueueKey Defines the QueueKey . Inheritance System.Object QueueKey Implements System.IEquatable < QueueKey > System.IComparable < QueueKey > System.IComparable Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class QueueKey : IEquatable<QueueKey>, IComparable<QueueKey>, IComparable Constructors | Improve this Doc View Source QueueKey(String) Initializes a new instance of the QueueKey class. Declaration public QueueKey([NotNull] string key) Parameters Type Name Description System.String key The key System.String . Properties | Improve this Doc View Source Identifier Gets the Identifier. Declaration [NotNull] public string Identifier { get; } Property Value Type Description System.String | Improve this Doc View Source TableIdentifier Gets the TableIdentifier. Declaration [NotNull] public string TableIdentifier { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CompareTo(QueueKey) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(QueueKey other) Parameters Type Name Description QueueKey other An object to compare with this instance. Returns Type Description System.Int32 The System.Int32 . | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 The System.Int32 . | Improve this Doc View Source Equals(QueueKey) The Equals. Declaration public bool Equals(QueueKey other) Parameters Type Name Description QueueKey other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) The Equals. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() The GetHashCode. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() The ToString. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(QueueKey, QueueKey) Returns a value that indicates whether the values of two QueueKey objects are equal. Declaration public static bool operator ==(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if the left and right parameters have the same value; otherwise, false . | Improve this Doc View Source GreaterThan(QueueKey, QueueKey) Returns a value that indicates whether a QueueKey value is greater than another QueueKey value. Declaration public static bool operator>(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source GreaterThanOrEqual(QueueKey, QueueKey) Returns a value that indicates whether a QueueKey value is greater than or equal to another QueueKey value. Declaration public static bool operator >=(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source Implicit(QueueKey to String) Performs an implicit conversion from QueueKey to System.String . Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static implicit operator string (QueueKey value) Parameters Type Name Description QueueKey value The value to convert. Returns Type Description System.String The result of the conversion. | Improve this Doc View Source Implicit(String to QueueKey) Performs an implicit conversion from System.String to QueueKey . Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static implicit operator QueueKey(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description QueueKey The result of the conversion. | Improve this Doc View Source Inequality(QueueKey, QueueKey) Returns a value that indicates whether two QueueKey objects have different values. Declaration public static bool operator !=(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if left and right are not equal; otherwise, false . | Improve this Doc View Source LessThan(QueueKey, QueueKey) Returns a value that indicates whether a QueueKey value is less than another QueueKey value. Declaration public static bool operator <(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if left is less than right ; otherwise, false . | Improve this Doc View Source LessThanOrEqual(QueueKey, QueueKey) Returns a value that indicates whether a QueueKey value is less than or equal to another QueueKey value. Declaration public static bool operator <=(QueueKey left, QueueKey right) Parameters Type Name Description QueueKey left The first value to compare. QueueKey right The second value to compare. Returns Type Description System.Boolean true if left is less than or equal to right ; otherwise, false . Implements System.IEquatable<T> System.IComparable<T> System.IComparable"
  },
  "api/OpenCollar.Azure.ReliableQueue.ReliableQueueException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ReliableQueueException.html",
    "title": "Class ReliableQueueException | API Documentation",
    "keywords": "Class ReliableQueueException Defines the ReliableQueueException . Inheritance System.Object System.Exception ReliableQueueException MessageException UnknownReliableQueueException Implements System.Runtime.Serialization.ISerializable Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class ReliableQueueException : Exception, ISerializable Constructors | Improve this Doc View Source ReliableQueueException(QueueKey) Initializes a new instance of the ReliableQueueException class. Declaration public ReliableQueueException([CanBeNull] QueueKey queueKey) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. | Improve this Doc View Source ReliableQueueException(QueueKey, String) Initializes a new instance of the ReliableQueueException class. Declaration public ReliableQueueException([CanBeNull] QueueKey queueKey, [CanBeNull] string message) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.String message The message that describes the error. | Improve this Doc View Source ReliableQueueException(QueueKey, String, Exception) Initializes a new instance of the ReliableQueueException class. Declaration public ReliableQueueException([NotNull] QueueKey queueKey, [CanBeNull] string message, [CanBeNull] Exception innerException) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source ReliableQueueException(SerializationInfo, StreamingContext) Initializes a new instance of the ReliableQueueException class. Declaration protected ReliableQueueException([CanBeNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Properties | Improve this Doc View Source QueueKey Gets the QueueKey. Declaration [CanBeNull] public QueueKey QueueKey { get; } Property Value Type Description QueueKey Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) | Improve this Doc View Source GetQueueKey(QueueKey) The GetQueueKey. Declaration [NotNull] protected static string GetQueueKey([CanBeNull] QueueKey queueKey) Parameters Type Name Description QueueKey queueKey The reliable queue key, can be null . Returns Type Description System.String The reliable queue key, quoted if appropriate, or placeholders for special values. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.SubscriptionToken.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.SubscriptionToken.html",
    "title": "Class SubscriptionToken | API Documentation",
    "keywords": "Class SubscriptionToken Defines the SubscriptionToken . Inheritance System.Object OpenCollar.Extensions.Disposable SubscriptionToken Implements System.IDisposable Inherited Members OpenCollar.Extensions.Disposable.Dispose() OpenCollar.Extensions.Disposable.CheckNotDisposed() Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class SubscriptionToken : Disposable, IDisposable Properties | Improve this Doc View Source Id Gets the Id. Declaration public Guid Id { get; } Property Value Type Description System.Guid Methods | Improve this Doc View Source Dispose(Boolean) The Dispose. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing The disposing System.Boolean . Overrides OpenCollar.Extensions.Disposable.Dispose(System.Boolean) Implements System.IDisposable"
  },
  "api/OpenCollar.Azure.ReliableQueue.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Defines the ServiceCollectionExtensions . Inheritance System.Object ServiceCollectionExtensions Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [UsedImplicitly] public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddReliableQueues(IServiceCollection) The AddReliableQueues. Declaration public static IServiceCollection AddReliableQueues(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The Microsoft.Extensions.DependencyInjection.IServiceCollection ."
  },
  "api/OpenCollar.Azure.ReliableQueue.UnknownReliableQueueException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.UnknownReliableQueueException.html",
    "title": "Class UnknownReliableQueueException | API Documentation",
    "keywords": "Class UnknownReliableQueueException Defines the UnknownReliableQueueException . Inheritance System.Object System.Exception ReliableQueueException UnknownReliableQueueException Implements System.Runtime.Serialization.ISerializable Inherited Members ReliableQueueException.QueueKey ReliableQueueException.GetObjectData(SerializationInfo, StreamingContext) ReliableQueueException.GetQueueKey(QueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class UnknownReliableQueueException : ReliableQueueException, ISerializable Constructors | Improve this Doc View Source UnknownReliableQueueException(QueueKey) Initializes a new instance of the UnknownReliableQueueException class. Declaration public UnknownReliableQueueException([NotNull] QueueKey queueKey) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. | Improve this Doc View Source UnknownReliableQueueException(QueueKey, String) Initializes a new instance of the UnknownReliableQueueException class. Declaration public UnknownReliableQueueException([NotNull] QueueKey queueKey, string message) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.String message The message that describes the error. | Improve this Doc View Source UnknownReliableQueueException(QueueKey, String, Exception) Initializes a new instance of the UnknownReliableQueueException class. Declaration public UnknownReliableQueueException([NotNull] QueueKey queueKey, string message, Exception innerException) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source UnknownReliableQueueException(SerializationInfo, StreamingContext) Initializes a new instance of the UnknownReliableQueueException class. Declaration protected UnknownReliableQueueException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Implements System.Runtime.Serialization.ISerializable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model.Text.Json | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model.Text.Json Classes QueueKeyConverter Defines the QueueKeyConverter . TopicConverter Defines the TopicConverter ."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model Classes QueueKey Defines the QueueKey . SubscriptionToken Defines the SubscriptionToken . Topic Defines the Topic . Enums MessageState Defines the potential states in which a record may be."
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Configuration Interfaces IReliableQueueConfiguration Defines the IReliableQueueConfiguration . IReliableQueuesConfiguration Defines the IReliableQueuesConfiguration ."
  },
  "api/OpenCollar.Azure.ReliableQueue.IReliableQueue.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.IReliableQueue.html",
    "title": "Interface IReliableQueue | API Documentation",
    "keywords": "Interface IReliableQueue Defines the IReliableQueue . Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueue Properties | Improve this Doc View Source CanReceive Gets a value indicating whether CanReceive. Declaration bool CanReceive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanSend Gets a value indicating whether CanSend. Declaration bool CanSend { get; } Property Value Type Description System.Boolean | Improve this Doc View Source QueueKey Gets the QueueKey. Declaration QueueKey QueueKey { get; } Property Value Type Description QueueKey Methods | Improve this Doc View Source IsSubscribed() The IsSubscribed. Declaration bool IsSubscribed() Returns Type Description System.Boolean true if the specified reliable queue key is subscribed; otherwise, false . | Improve this Doc View Source OnReceivedAsync(String, Nullable<TimeSpan>, Nullable<CancellationToken>) Called when a trigger (e.g. EventGrid or StorageQueue) receives a notification of a message to be processed. The notification can be intended for any reliable queue. Declaration Task OnReceivedAsync([NotNull] string base64, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String base64 The Base-64 encoded JSON representation of the serialized message. System.Nullable < System.TimeSpan > timeout The timeout System.TimeSpan . System.Nullable < System.Threading.CancellationToken > cancellationToken The cancellationToken System.Threading.CancellationToken . Returns Type Description System.Threading.Tasks.Task A task that processes the message supplied. | Improve this Doc View Source SendMessageAsync(Byte[], Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) The SendMessageAsync. Declaration Task SendMessageAsync([CanBeNull] byte[] body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Byte [] body The body of the message to send. This can be null or contain any content. Topic topic The topic Topic . System.Nullable < System.TimeSpan > timeout The timeout System.TimeSpan . System.Nullable < System.Threading.CancellationToken > cancellationToken The cancellationToken System.Threading.CancellationToken . Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. | Improve this Doc View Source SendMessageAsync(Stream, Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) The SendMessageAsync. Declaration Task SendMessageAsync([CanBeNull] Stream body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.IO.Stream body The body of the message to send. This can be null or contain any content. Topic topic The topic Topic . System.Nullable < System.TimeSpan > timeout The timeout System.TimeSpan . System.Nullable < System.Threading.CancellationToken > cancellationToken The cancellationToken System.Threading.CancellationToken . Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. | Improve this Doc View Source SendMessageAsync(String, Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) The SendMessageAsync. Declaration Task SendMessageAsync([CanBeNull] string body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String body The body of the message to send. This can be null or contain any content. Topic topic The topic Topic . System.Nullable < System.TimeSpan > timeout The timeout System.TimeSpan . System.Nullable < System.Threading.CancellationToken > cancellationToken The cancellationToken System.Threading.CancellationToken . Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. | Improve this Doc View Source Subscribe(EventHandler<ReceivedMessageEventArgs>) The Subscribe. Declaration SubscriptionToken Subscribe([NotNull] EventHandler<ReceivedMessageEventArgs> callbackHandler) Parameters Type Name Description System.EventHandler < ReceivedMessageEventArgs > callbackHandler The event handler to call when a message arrives. Returns Type Description SubscriptionToken A token that can be used to unsubscribe, either by calling Unsubscribe(SubscriptionToken) or by disposing. | Improve this Doc View Source Unsubscribe(SubscriptionToken) The Unsubscribe. Declaration bool Unsubscribe([NotNull] SubscriptionToken token) Parameters Type Name Description SubscriptionToken token The token returned by Subscribe(EventHandler<ReceivedMessageEventArgs>) when the subscription was created. Returns Type Description System.Boolean The System.Boolean ."
  },
  "api/OpenCollar.Azure.ReliableQueue.ReceivedMessageEventArgs.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ReceivedMessageEventArgs.html",
    "title": "Class ReceivedMessageEventArgs | API Documentation",
    "keywords": "Class ReceivedMessageEventArgs Defines the ReceivedMessageEventArgs . Inheritance System.Object System.EventArgs System.ComponentModel.HandledEventArgs ReceivedMessageEventArgs Inherited Members System.ComponentModel.HandledEventArgs.Handled System.EventArgs.Empty Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class ReceivedMessageEventArgs : HandledEventArgs Properties | Improve this Doc View Source queueKey Gets the queueKey. Declaration public QueueKey queueKey { get; } Property Value Type Description QueueKey | Improve this Doc View Source Size Gets the Size. Declaration public long? Size { get; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Topic Gets the Topic. Declaration public Topic Topic { get; } Property Value Type Description Topic Methods | Improve this Doc View Source GetBodyAsBufferAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) The GetBodyAsBufferAsync. Declaration [CanBeNull] public Task<byte[]> GetBodyAsBufferAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.Byte []> A task that returns the message body as an array of bytes (or null if the message had no body). | Improve this Doc View Source GetBodyAsStreamAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) The GetBodyAsStreamAsync. Declaration [CanBeNull] public Task<Stream> GetBodyAsStreamAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.IO.Stream > A task that returns the message body as a stream (or null if the message had no body). | Improve this Doc View Source GetBodyAsStringAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) The GetBodyAsStringAsync. Declaration [CanBeNull] public Task<string> GetBodyAsStringAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.String > A task that returns the message body as a string (or null if the message had no body)."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.TopicConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.TopicConverter.html",
    "title": "Class TopicConverter | API Documentation",
    "keywords": "Class TopicConverter Defines the TopicConverter . Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < Topic > TopicConverter Inherited Members System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.CanConvert(System.Type) Namespace : OpenCollar.Azure.ReliableQueue.Model.Text.Json Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class TopicConverter : JsonConverter<Topic> Properties | Improve this Doc View Source Instance Gets the Instance. Declaration [NotNull] public static TopicConverter Instance { get; } Property Value Type Description TopicConverter Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) The Read. Declaration public override Topic Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader The reader. System.Type typeToConvert The type to convert. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Returns Type Description Topic The converted value. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, Topic, JsonSerializerOptions) The Write. Declaration public override void Write(Utf8JsonWriter writer, Topic value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer The writer to write to. Topic value The value to convert to JSON. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.Write(System.Text.Json.Utf8JsonWriter, OpenCollar.Azure.ReliableQueue.Model.Topic, System.Text.Json.JsonSerializerOptions)"
  },
  "api/OpenCollar.Azure.ReliableQueue.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue Classes MessageException Defines the MessageException . MessageStateException Defines the MessageStateException . ReceivedMessageEventArgs Defines the ReceivedMessageEventArgs . ReliableQueueException Defines the ReliableQueueException . ServiceCollectionExtensions Defines the ServiceCollectionExtensions . UnknownReliableQueueException Defines the UnknownReliableQueueException . Interfaces IReliableQueue Defines the IReliableQueue . IReliableQueueService The public interface of the service used to coordinate the sending and receiving of messages using Azure Storage Queues."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.MessageState.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.MessageState.html",
    "title": "Enum MessageState | API Documentation",
    "keywords": "Enum MessageState Defines the potential states in which a record may be. Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public enum MessageState Fields Name Description Failed The message has failed processing too many times and is being moved to the dead letter queue. New The message has been passed from the sender to the service, but not yet processed. Processing The message has been dequeued and is being processed by the recipient. Queued The message has been queued and is ready for receipt. Unknown The state of the message is unknown or undefined. This is a sentinel used to detect unset values and will normally result in an exception being thrown."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.QueueKeyConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.QueueKeyConverter.html",
    "title": "Class QueueKeyConverter | API Documentation",
    "keywords": "Class QueueKeyConverter Defines the QueueKeyConverter . Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < QueueKey > QueueKeyConverter Inherited Members System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.CanConvert(System.Type) Namespace : OpenCollar.Azure.ReliableQueue.Model.Text.Json Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class QueueKeyConverter : JsonConverter<QueueKey> Properties | Improve this Doc View Source Instance Gets the Instance. Declaration [NotNull] public static QueueKeyConverter Instance { get; } Property Value Type Description QueueKeyConverter Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) The Read. Declaration public override QueueKey Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader The reader. System.Type typeToConvert The type to convert. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Returns Type Description QueueKey The converted value. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, QueueKey, JsonSerializerOptions) The Write. Declaration public override void Write(Utf8JsonWriter writer, QueueKey value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer The writer to write to. QueueKey value The value to convert to JSON. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.QueueKey>.Write(System.Text.Json.Utf8JsonWriter, OpenCollar.Azure.ReliableQueue.Model.QueueKey, System.Text.Json.JsonSerializerOptions)"
  },
  "api/OpenCollar.Azure.ReliableQueue.MessageStateException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.MessageStateException.html",
    "title": "Class MessageStateException | API Documentation",
    "keywords": "Class MessageStateException Defines the MessageStateException . Inheritance System.Object System.Exception ReliableQueueException MessageException MessageStateException Implements System.Runtime.Serialization.ISerializable Inherited Members MessageException.MessageId MessageException.GetMessageId(Guid) ReliableQueueException.QueueKey ReliableQueueException.GetQueueKey(QueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class MessageStateException : MessageException, ISerializable Constructors | Improve this Doc View Source MessageStateException(QueueKey, Guid, MessageState, MessageState) Initializes a new instance of the MessageStateException class. Declaration public MessageStateException([NotNull] QueueKey queueKey, Guid messageId, MessageState expectedState, MessageState actualState) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. | Improve this Doc View Source MessageStateException(QueueKey, Guid, MessageState, MessageState, String) Initializes a new instance of the MessageStateException class. Declaration public MessageStateException([NotNull] QueueKey queueKey, Guid messageId, MessageState expectedState, MessageState actualState, string message) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. System.String message The message that describes the error. | Improve this Doc View Source MessageStateException(QueueKey, Guid, MessageState, MessageState, String, Exception) Initializes a new instance of the MessageStateException class. Declaration public MessageStateException([NotNull] QueueKey queueKey, Guid messageId, MessageState expectedState, MessageState actualState, string message, Exception innerException) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source MessageStateException(SerializationInfo, StreamingContext) Initializes a new instance of the MessageStateException class. Declaration protected MessageStateException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Properties | Improve this Doc View Source ActualState Gets the ActualState. Declaration public MessageState ActualState { get; } Property Value Type Description MessageState | Improve this Doc View Source ExpectedState Gets the ExpectedState. Declaration public MessageState ExpectedState { get; } Property Value Type Description MessageState Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Overrides MessageException.GetObjectData(SerializationInfo, StreamingContext) Implements System.Runtime.Serialization.ISerializable"
  },
  "api/OpenCollar.Azure.ReliableQueue.IReliableQueueService.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.IReliableQueueService.html",
    "title": "Interface IReliableQueueService | API Documentation",
    "keywords": "Interface IReliableQueueService The public interface of the service used to coordinate the sending and receiving of messages using Azure Storage Queues. Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueueService Properties | Improve this Doc View Source Item[QueueKey] Gets the IReliableQueue object for the reliable queue with the specified reliable queue key. Declaration [NotNull] IReliableQueue this[[NotNull] QueueKey queueKey] { get; } Parameters Type Name Description QueueKey queueKey The key for the reliable queue for which to return the object. Property Value Type Description IReliableQueue The IReliableQueue object requested. Exceptions Type Condition System.ArgumentNullException queueKey was null . Methods | Improve this Doc View Source OnReceivedAsync(String, Nullable<TimeSpan>, Nullable<CancellationToken>) Called when a trigger (e.g. EventGrid or StorageQueue) receives a notification of a message to be processed. Declaration Task OnReceivedAsync([NotNull] string base64, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String base64 The Base-64 encoded JSON representation of the serialized message. System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to process the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to process the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that processes the message supplied. Exceptions Type Condition System.ArgumentNullException base64 was null . System.ArgumentException base64 was zero-length or contains only white-space characters. | Improve this Doc View Source Unsubscribe(SubscriptionToken) Unsubscribes from the reliable queue by the token given. Declaration bool Unsubscribe([NotNull] SubscriptionToken token) Parameters Type Name Description SubscriptionToken token The token returned by Subscribe(EventHandler<ReceivedMessageEventArgs>) when the subscription was created. Returns Type Description System.Boolean true if the subscription was found and unsubscribed; otherwise, false if there was no subscription to remove. Exceptions Type Condition System.ArgumentNullException token was null ."
  },
  "api/OpenCollar.Azure.ReliableQueue.MessageException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.MessageException.html",
    "title": "Class MessageException | API Documentation",
    "keywords": "Class MessageException Defines the MessageException . Inheritance System.Object System.Exception ReliableQueueException MessageException MessageStateException Implements System.Runtime.Serialization.ISerializable Inherited Members ReliableQueueException.QueueKey ReliableQueueException.GetQueueKey(QueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class MessageException : ReliableQueueException, ISerializable Constructors | Improve this Doc View Source MessageException(QueueKey, Guid) Initializes a new instance of the MessageException class. Declaration public MessageException([NotNull] QueueKey queueKey, Guid messageId) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. | Improve this Doc View Source MessageException(QueueKey, Guid, String) Initializes a new instance of the MessageException class. Declaration public MessageException([NotNull] QueueKey queueKey, Guid messageId, string message) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. System.String message The message that describes the error. | Improve this Doc View Source MessageException(QueueKey, Guid, String, Exception) Initializes a new instance of the MessageException class. Declaration public MessageException([NotNull] QueueKey queueKey, Guid messageId, string message, Exception innerException) Parameters Type Name Description QueueKey queueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source MessageException(SerializationInfo, StreamingContext) Initializes a new instance of the MessageException class. Declaration protected MessageException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Properties | Improve this Doc View Source MessageId Gets the MessageId. Declaration public Guid MessageId { get; } Property Value Type Description System.Guid Methods | Improve this Doc View Source GetMessageId(Guid) The GetMessageId. Declaration [NotNull] protected static string GetMessageId(Guid messageId) Parameters Type Name Description System.Guid messageId The reliable queue key, can be empty. Returns Type Description System.String The message ID, quoted if appropriate, or placeholders for special values. | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The info System.Runtime.Serialization.SerializationInfo . System.Runtime.Serialization.StreamingContext context The context System.Runtime.Serialization.StreamingContext . Overrides ReliableQueueException.GetObjectData(SerializationInfo, StreamingContext) Implements System.Runtime.Serialization.ISerializable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model.Newtonsoft | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Classes QueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. TopicConverter Defines the TopicConverter ."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Topic.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Topic.html",
    "title": "Class Topic | API Documentation",
    "keywords": "Class Topic Defines the Topic . Inheritance System.Object Topic Implements System.IEquatable < Topic > System.IComparable < Topic > System.IComparable Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [JsonConverter(typeof(TopicConverter))] [JsonConverter(typeof(TopicConverter))] public sealed class Topic : IEquatable<Topic>, IComparable<Topic>, IComparable Constructors | Improve this Doc View Source Topic(String) Initializes a new instance of the Topic class. Declaration [JsonConstructor] public Topic([CanBeNull] string key) Parameters Type Name Description System.String key The key System.String . Fields | Improve this Doc View Source Default Defines the Default. Declaration [NotNull] public static readonly Topic Default Field Value Type Description Topic | Improve this Doc View Source DefaultIdentifier Defines the DefaultIdentifier. Declaration [NotNull] public const string DefaultIdentifier = \"__default__\" Field Value Type Description System.String Properties | Improve this Doc View Source Identifier Gets the Identifier. Declaration [NotNull] public string Identifier { get; } Property Value Type Description System.String | Improve this Doc View Source IsEmpty Gets a value indicating whether IsEmpty. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CompareTo(Topic) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(Topic other) Parameters Type Name Description Topic other An object to compare with this instance. Returns Type Description System.Int32 The System.Int32 . | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 The System.Int32 . | Improve this Doc View Source Equals(Topic) The Equals. Declaration public bool Equals(Topic other) Parameters Type Name Description Topic other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) The Equals. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() The GetHashCode. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() The ToString. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(Topic, Topic) Returns a value that indicates whether the values of two Topic objects are equal. Declaration public static bool operator ==(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if the left and right parameters have the same value; otherwise, false . | Improve this Doc View Source GreaterThan(Topic, Topic) Returns a value that indicates whether a Topic value is greater than another Topic value. Declaration public static bool operator>(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source GreaterThanOrEqual(Topic, Topic) Returns a value that indicates whether a Topic value is greater than or equal to another Topic value. Declaration public static bool operator >=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source Implicit(Topic to String) Performs an implicit conversion from Topic to System.String . Declaration [CanBeNull] public static implicit operator string (Topic value) Parameters Type Name Description Topic value The value to convert. Returns Type Description System.String The result of the conversion. | Improve this Doc View Source Implicit(String to Topic) Performs an implicit conversion from System.String to Topic . Declaration [NotNull] public static implicit operator Topic([CanBeNull] string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description Topic The result of the conversion. | Improve this Doc View Source Inequality(Topic, Topic) Returns a value that indicates whether two Topic objects have different values. Declaration public static bool operator !=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left and right are not equal; otherwise, false . | Improve this Doc View Source LessThan(Topic, Topic) Returns a value that indicates whether a Topic value is less than another Topic value. Declaration public static bool operator <(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is less than right ; otherwise, false . | Improve this Doc View Source LessThanOrEqual(Topic, Topic) Returns a value that indicates whether a Topic value is less than or equal to another Topic value. Declaration public static bool operator <=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is less than or equal to right ; otherwise, false . Implements System.IEquatable<T> System.IComparable<T> System.IComparable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueueConfiguration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueueConfiguration.html",
    "title": "Interface IReliableQueueConfiguration | API Documentation",
    "keywords": "Interface IReliableQueueConfiguration Defines the IReliableQueueConfiguration . Inherited Members OpenCollar.Extensions.Configuration.IConfigurationObject.Delete() OpenCollar.Extensions.Configuration.IConfigurationObject.Load() OpenCollar.Extensions.Configuration.IConfigurationObject.Save() OpenCollar.Extensions.Configuration.IConfigurationObject.IsDirty System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Azure.ReliableQueue.Configuration Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueueConfiguration : IConfigurationObject, IDisposable, INotifyPropertyChanged Fields | Improve this Doc View Source ModeBoth Defines the ModeBoth. Declaration [NotNull] public const string ModeBoth = \"Both\" Field Value Type Description System.String | Improve this Doc View Source ModeReceive Defines the ModeReceive. Declaration [NotNull] public const string ModeReceive = \"Receive\" Field Value Type Description System.String | Improve this Doc View Source ModeSend Defines the ModeSend. Declaration [NotNull] public const string ModeSend = \"Send\" Field Value Type Description System.String Properties | Improve this Doc View Source CreateListener Gets or sets a value indicating whether CreateListener. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = false)] [Path(PathIs.Relative, \"CreateListener\")] bool CreateListener { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DefaultTimeoutSeconds Gets or sets the DefaultTimeoutSeconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 30)] [Path(PathIs.Relative, \"DefaultTimeoutSeconds\")] int DefaultTimeoutSeconds { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether IsEnabled. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = true)] [Path(PathIs.Relative, \"IsEnabled\")] bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxAttempts Gets or sets the MaxAttempts. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 3)] [Path(PathIs.Relative, \"MaxAttempts\")] int MaxAttempts { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MessageTimeToLiveSeconds Gets or sets the MessageTimeToLiveSeconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 172800)] [Path(PathIs.Relative, \"MessageTimeToLiveSeconds\")] int MessageTimeToLiveSeconds { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Mode Gets or sets the Mode. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly)] [Path(PathIs.Relative, \"Mode\")] string Mode { get; set; } Property Value Type Description System.String | Improve this Doc View Source SlidingWindowDurationSeconds Gets or sets the SlidingWindowDurationSeconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 1)] [Path(PathIs.Relative, \"SlidingWindowDurationSeconds\")] int SlidingWindowDurationSeconds { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StorageConnectionString Gets or sets the StorageConnectionString. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = null)] [Path(PathIs.Relative, \"StorageConnectionString\")] string StorageConnectionString { get; set; } Property Value Type Description System.String | Improve this Doc View Source TopicAffinityTtlSeconds Gets or sets the TopicAffinityTtlSeconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 30)] [Path(PathIs.Relative, \"TopicAffinityTtlSeconds\")] int TopicAffinityTtlSeconds { get; set; } Property Value Type Description System.Int32"
  }
}