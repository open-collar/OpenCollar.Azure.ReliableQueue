{
  "api/OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey.html",
    "title": "Class ReliableQueueKey | API Documentation",
    "keywords": "Class ReliableQueueKey Represents a key that can be used to identify a message key. Inheritance System.Object ReliableQueueKey Implements System.IEquatable < ReliableQueueKey > System.IComparable < ReliableQueueKey > System.IComparable Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class ReliableQueueKey : IEquatable<ReliableQueueKey>, IComparable<ReliableQueueKey>, IComparable Constructors | Improve this Doc View Source ReliableQueueKey(String) Initializes a new instance of the ReliableQueueKey class. Declaration public ReliableQueueKey([NotNull] string key) Parameters Type Name Description System.String key The key that uniquely identifies the reliable queue in the configuration. The key is case insensitive. The key must not be null , zero-length or contain only white-space characters. Exceptions Type Condition System.ArgumentNullException key was null . System.ArgumentException key was zero-length or contains only white-space characters. Properties | Improve this Doc View Source Identifier Gets the safe identifier created from the key for use in Azure. Declaration [NotNull] public string Identifier { get; } Property Value Type Description System.String The safe identifier created from the key for use in Azure. | Improve this Doc View Source TableIdentifier Gets the safe identifier suitable for use in table names created from the key for use in Azure. Declaration [NotNull] public string TableIdentifier { get; } Property Value Type Description System.String The safe identifier suitable for use in table names created from the key for use in Azure. Methods | Improve this Doc View Source CompareTo(ReliableQueueKey) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(ReliableQueueKey other) Parameters Type Name Description ReliableQueueKey other An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other . Greater than zero This instance follows other in the sort order. | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj . Greater than zero This instance follows obj in the sort order. Exceptions Type Condition System.ArgumentException obj is not the same type as this instance. | Improve this Doc View Source Equals(ReliableQueueKey) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ReliableQueueKey other) Parameters Type Name Description ReliableQueueKey other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether the values of two ReliableQueueKey objects are equal. Declaration public static bool operator ==(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if the left and right parameters have the same value; otherwise, false . | Improve this Doc View Source GreaterThan(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether a ReliableQueueKey value is greater than another ReliableQueueKey value. Declaration public static bool operator>(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source GreaterThanOrEqual(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether a ReliableQueueKey value is greater than or equal to another ReliableQueueKey value. Declaration public static bool operator >=(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source Implicit(ReliableQueueKey to String) Performs an implicit conversion from ReliableQueueKey to System.String . Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static implicit operator string (ReliableQueueKey value) Parameters Type Name Description ReliableQueueKey value The value to convert. Returns Type Description System.String The result of the conversion. | Improve this Doc View Source Implicit(String to ReliableQueueKey) Performs an implicit conversion from System.String to ReliableQueueKey . Declaration [ContractAnnotation(\"null=>null;notnull=>notnull\")] public static implicit operator ReliableQueueKey(string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description ReliableQueueKey The result of the conversion. | Improve this Doc View Source Inequality(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether two ReliableQueueKey objects have different values. Declaration public static bool operator !=(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if left and right are not equal; otherwise, false . | Improve this Doc View Source LessThan(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether a ReliableQueueKey value is less than another ReliableQueueKey value. Declaration public static bool operator <(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if left is less than right ; otherwise, false . | Improve this Doc View Source LessThanOrEqual(ReliableQueueKey, ReliableQueueKey) Returns a value that indicates whether a ReliableQueueKey value is less than or equal to another ReliableQueueKey value. Declaration public static bool operator <=(ReliableQueueKey left, ReliableQueueKey right) Parameters Type Name Description ReliableQueueKey left The first value to compare. ReliableQueueKey right The second value to compare. Returns Type Description System.Boolean true if left is less than or equal to right ; otherwise, false . Implements System.IEquatable<T> System.IComparable<T> System.IComparable See Also System.IEquatable <T> System.IComparable <T> System.IComparable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.TopicConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.TopicConverter.html",
    "title": "Class TopicConverter | API Documentation",
    "keywords": "Class TopicConverter A converter that ensures that reliable queue topics are represented in the correct format. Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < Topic > TopicConverter Inherited Members System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.CanConvert(System.Type) Namespace : OpenCollar.Azure.ReliableQueue.Model.Text.Json Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class TopicConverter : JsonConverter<Topic> Properties | Improve this Doc View Source Instance Gets a common instance of the converter that can be reused as necessary. Declaration [NotNull] public static TopicConverter Instance { get; } Property Value Type Description TopicConverter A common instance of the converter that can be reused as necessary. Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type Topic . Declaration public override Topic Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader The reader. System.Type typeToConvert The type to convert. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Returns Type Description Topic The converted value. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, Topic, JsonSerializerOptions) Writes a specified value as JSON. Declaration public override void Write(Utf8JsonWriter writer, Topic value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer The writer to write to. Topic value The value to convert to JSON. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.Write(System.Text.Json.Utf8JsonWriter, OpenCollar.Azure.ReliableQueue.Model.Topic, System.Text.Json.JsonSerializerOptions) See Also Topic"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Topic.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Topic.html",
    "title": "Class Topic | API Documentation",
    "keywords": "Class Topic Represents a key that can be used to identify a message topic. Inheritance System.Object Topic Implements System.IEquatable < Topic > System.IComparable < Topic > System.IComparable Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [JsonConverter(typeof(TopicConverter))] [JsonConverter(typeof(TopicConverter))] public sealed class Topic : IEquatable<Topic>, IComparable<Topic>, IComparable Constructors | Improve this Doc View Source Topic(String) Initializes a new instance of the Topic class. Declaration [JsonConstructor] public Topic([CanBeNull] string key) Parameters Type Name Description System.String key The key that uniquely identifies the reliable queue in the configuration. The key is case insensitive. The key must not be null , zero-length or contain only white-space characters. Exceptions Type Condition System.ArgumentNullException key was null . System.ArgumentException key was zero-length or contains only white-space characters. Fields | Improve this Doc View Source Default The default (empty) topic. Declaration [NotNull] public static readonly Topic Default Field Value Type Description Topic Properties | Improve this Doc View Source Identifier Gets the safe identifier created from the key for use in Azure. Declaration [NotNull] public string Identifier { get; } Property Value Type Description System.String The safe identifier created from the key for use in Azure. | Improve this Doc View Source IsEmpty Gets a value indicating whether this topic has been set. Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean true if this topic has not been set; otherwise, false if the topic has not been set. Methods | Improve this Doc View Source CompareTo(Topic) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(Topic other) Parameters Type Name Description Topic other An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes other in the sort order. Zero This instance occurs in the same position in the sort order as other . Greater than zero This instance follows other in the sort order. | Improve this Doc View Source CompareTo(Object) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. Declaration public int CompareTo(object obj) Parameters Type Name Description System.Object obj An object to compare with this instance. Returns Type Description System.Int32 A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj . Greater than zero This instance follows obj in the sort order. Exceptions Type Condition System.ArgumentException obj is not the same type as this instance. | Improve this Doc View Source Equals(Topic) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Topic other) Parameters Type Name Description Topic other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(Topic, Topic) Returns a value that indicates whether the values of two Topic objects are equal. Declaration public static bool operator ==(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if the left and right parameters have the same value; otherwise, false . | Improve this Doc View Source GreaterThan(Topic, Topic) Returns a value that indicates whether a Topic value is greater than another Topic value. Declaration public static bool operator>(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source GreaterThanOrEqual(Topic, Topic) Returns a value that indicates whether a Topic value is greater than or equal to another Topic value. Declaration public static bool operator >=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is greater than right ; otherwise, false . | Improve this Doc View Source Implicit(Topic to String) Performs an implicit conversion from Topic to System.String . Declaration [CanBeNull] public static implicit operator string (Topic value) Parameters Type Name Description Topic value The value to convert. Returns Type Description System.String The result of the conversion. | Improve this Doc View Source Implicit(String to Topic) Performs an implicit conversion from System.String to Topic . Declaration [NotNull] public static implicit operator Topic([CanBeNull] string value) Parameters Type Name Description System.String value The value to convert. Returns Type Description Topic The result of the conversion. | Improve this Doc View Source Inequality(Topic, Topic) Returns a value that indicates whether two Topic objects have different values. Declaration public static bool operator !=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left and right are not equal; otherwise, false . | Improve this Doc View Source LessThan(Topic, Topic) Returns a value that indicates whether a Topic value is less than another Topic value. Declaration public static bool operator <(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is less than right ; otherwise, false . | Improve this Doc View Source LessThanOrEqual(Topic, Topic) Returns a value that indicates whether a Topic value is less than or equal to another Topic value. Declaration public static bool operator <=(Topic left, Topic right) Parameters Type Name Description Topic left The first value to compare. Topic right The second value to compare. Returns Type Description System.Boolean true if left is less than or equal to right ; otherwise, false . Implements System.IEquatable<T> System.IComparable<T> System.IComparable See Also System.IEquatable <T> System.IComparable <T> System.IComparable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.ReliableQueueKeyConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.ReliableQueueKeyConverter.html",
    "title": "Class ReliableQueueKeyConverter | API Documentation",
    "keywords": "Class ReliableQueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. Inheritance System.Object Newtonsoft.Json.JsonConverter Newtonsoft.Json.JsonConverter < ReliableQueueKey > ReliableQueueKeyConverter Inherited Members Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Namespace : OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class ReliableQueueKeyConverter : JsonConverter<ReliableQueueKey> Properties | Improve this Doc View Source Instance Gets a common instance of the converter that can be reused as necessary. Declaration [NotNull] public static ReliableQueueKeyConverter Instance { get; } Property Value Type Description ReliableQueueKeyConverter A common instance of the converter that can be reused as necessary. Methods | Improve this Doc View Source ReadJson(JsonReader, Type, ReliableQueueKey, Boolean, JsonSerializer) Reads the JSON representation of the object. Declaration public override ReliableQueueKey ReadJson(JsonReader reader, Type objectType, ReliableQueueKey existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. System.Type objectType Type of the object. ReliableQueueKey existingValue The existing value of object being read. If there is no existing value then null will be used. System.Boolean hasExistingValue The existing value has a value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description ReliableQueueKey The object value. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey, System.Boolean, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException reader is null . | Improve this Doc View Source WriteJson(JsonWriter, ReliableQueueKey, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, ReliableQueueKey value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. ReliableQueueKey value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.WriteJson(Newtonsoft.Json.JsonWriter, OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException writer is null . See Also ReliableQueueKey"
  },
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "OpenCollar.Azure.ReliableQueue This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Azure.ReliableQueue/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. Related Projects OpenCollar.Azure.Storage OpenCollar.Azure.ReliableQueue OpenCollar.Extensions OpenCollar.Extensions.ApplicationInsights OpenCollar.Extensions.Collections OpenCollar.Extensions.Configuraton OpenCollar.Extensions.Environment OpenCollar.Extensions.IO OpenCollar.Extensions.Logging OpenCollar.Extensions.Security OpenCollar.Extensions.Threading OpenCollar.Extensions.Validation"
  },
  "api/OpenCollar.Azure.ReliableQueue.ServiceCollectionExtensions.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | API Documentation",
    "keywords": "Class ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing reliable queue services to be registered. Inheritance System.Object ServiceCollectionExtensions Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [UsedImplicitly] public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddReliableQueues(IServiceCollection) Adds the reliable queue services to the Microsoft.Extensions.DependencyInjection.IServiceCollection given. Declaration public static IServiceCollection AddReliableQueues(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to which to add the configuration reader. This must not be null . Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Exceptions Type Condition System.ArgumentNullException serviceCollection was null ."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model Classes ReliableQueueKey Represents a key that can be used to identify a message key. SubscriptionToken A token used to represent an individual subscription to callbacks for messages arriving on a reliable queue. Topic Represents a key that can be used to identify a message topic. Enums MessageState Defines the potential states in which a record may be."
  },
  "api/OpenCollar.Azure.ReliableQueue.IReliableQueue.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.IReliableQueue.html",
    "title": "Interface IReliableQueue | API Documentation",
    "keywords": "Interface IReliableQueue The public interface of the object representing a reliable queue. Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueue Properties | Improve this Doc View Source CanReceive Gets a value indicating whether the queue can be used to receive message. Declaration bool CanReceive { get; } Property Value Type Description System.Boolean true if the queue can be used to receive messages; otherwise, false . | Improve this Doc View Source CanSend Gets a value indicating whether the queue can be used to send message. Declaration bool CanSend { get; } Property Value Type Description System.Boolean true if the queue can be used to send messages; otherwise, false . | Improve this Doc View Source ReliableQueueKey Gets the key identifying the reliable queue represented. Declaration ReliableQueueKey ReliableQueueKey { get; } Property Value Type Description ReliableQueueKey The identifying the reliable queue represented. Methods | Improve this Doc View Source IsSubscribed() Determines whether any subscriptions exist for the reliable queue. Declaration bool IsSubscribed() Returns Type Description System.Boolean true if the specified reliable queue key is subscribed; otherwise, false . | Improve this Doc View Source OnReceivedAsync(String, Nullable<TimeSpan>, Nullable<CancellationToken>) Called when a trigger (e.g. EventGrid or StorageQueue) receives a notification of a message to be processed. The notification can be intended for any reliable queue. Declaration Task OnReceivedAsync([NotNull] string base64, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String base64 The Base-64 encoded JSON representation of the serialized message. System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to process the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to process the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that processes the message supplied. Exceptions Type Condition System.ArgumentNullException base64 was null . System.ArgumentException base64 was zero-length or contains only white-space characters. | Improve this Doc View Source SendMessageAsync(Byte[], Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) Sends the message body provided on the reliable queue, optionally on the topic given. Declaration Task SendMessageAsync([CanBeNull] byte[] body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Byte [] body The body of the message to send. This can be null or contain any content. Topic topic A key used to identify messages that are related to one-another. These are guaranteed to be delivered sequentially and in order. This is fixed at creation. The value in Default will be used if the one specified is null , zero-length or contains only white-space characters System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to send the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to send the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. Exceptions Type Condition System.InvalidOperationException Message queue is configured to be receive-only. | Improve this Doc View Source SendMessageAsync(Stream, Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) Sends the message body provided on the reliable queue, optionally on the topic given. Declaration Task SendMessageAsync([CanBeNull] Stream body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.IO.Stream body The body of the message to send. This can be null or contain any content. Topic topic A key used to identify messages that are related to one-another. These are guaranteed to be delivered sequentially and in order. This is fixed at creation. The value in Default will be used if the one specified is null , zero-length or contains only white-space characters System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to send the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to send the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. Exceptions Type Condition System.InvalidOperationException Message queue is configured to be receive-only. | Improve this Doc View Source SendMessageAsync(String, Topic, Nullable<TimeSpan>, Nullable<CancellationToken>) Sends the message body provided on the reliable queue, optionally on the topic given. Declaration Task SendMessageAsync([CanBeNull] string body, [CanBeNull] Topic topic = null, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String body The body of the message to send. This can be null or contain any content. Topic topic A key used to identify messages that are related to one-another. These are guaranteed to be delivered sequentially and in order. This is fixed at creation. The value in Default will be used if the one specified is null , zero-length or contains only white-space characters System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to send the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to send the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that performs the action specified. Exceptions Type Condition System.InvalidOperationException Message queue is configured to be receive-only. | Improve this Doc View Source Subscribe(EventHandler<ReceivedMessageEventArgs>) Subscribes the specified reliable queue key. Declaration SubscriptionToken Subscribe([NotNull] EventHandler<ReceivedMessageEventArgs> callbackHandler) Parameters Type Name Description System.EventHandler < ReceivedMessageEventArgs > callbackHandler The event handler to call when a message arrives. Returns Type Description SubscriptionToken A token that can be used to unsubscribe, either by calling Unsubscribe(SubscriptionToken) or by disposing. Exceptions Type Condition System.ArgumentNullException callbackHandler was null . System.InvalidOperationException Message queue is configured to be send-only. | Improve this Doc View Source Unsubscribe(SubscriptionToken) Unsubscribes from the reliable queue by the token given. Declaration bool Unsubscribe([NotNull] SubscriptionToken token) Parameters Type Name Description SubscriptionToken token The token returned by Subscribe(EventHandler<ReceivedMessageEventArgs>) when the subscription was created. Returns Type Description System.Boolean true if the subscription was found and unsubscribed; otherwise, false if there was no subscription to remove. Exceptions Type Condition System.ArgumentNullException token was null . System.InvalidOperationException Message queue is configured to be send-only."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model.Newtonsoft | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Classes ReliableQueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. TopicConverter A converter that ensures that reliable queue topics are represented in the correct format."
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Configuration | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Configuration Interfaces IReliableQueueConfiguration The configuration for a single reliable queue. IReliableQueuesConfiguration The root configuration object in which all configuration for reliable queues is defined."
  },
  "api/OpenCollar.Azure.ReliableQueue.ReliableQueueException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ReliableQueueException.html",
    "title": "Class ReliableQueueException | API Documentation",
    "keywords": "Class ReliableQueueException A class used to represent an exception involving a reliable queue. Inheritance System.Object System.Exception ReliableQueueException MessageException UnknownReliableQueueException Implements System.Runtime.Serialization.ISerializable Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class ReliableQueueException : Exception, ISerializable Constructors | Improve this Doc View Source ReliableQueueException(ReliableQueueKey) Initializes a new instance of the ReliableQueueException class. Declaration public ReliableQueueException([CanBeNull] ReliableQueueKey reliableQueueKey) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. | Improve this Doc View Source ReliableQueueException(ReliableQueueKey, String) Initializes a new instance of the ReliableQueueException class with a specified error message. Declaration public ReliableQueueException([CanBeNull] ReliableQueueKey reliableQueueKey, [CanBeNull] string message) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.String message The message that describes the error. | Improve this Doc View Source ReliableQueueException(ReliableQueueKey, String, Exception) Initializes a new instance of the ReliableQueueException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ReliableQueueException([NotNull] ReliableQueueKey reliableQueueKey, [CanBeNull] string message, [CanBeNull] Exception innerException) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source ReliableQueueException(SerializationInfo, StreamingContext) Initializes a new instance of the ReliableQueueException class with serialized data. Declaration protected ReliableQueueException([CanBeNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null . System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). Properties | Improve this Doc View Source ReliableQueueKey Gets the key identifying the reliable queue involved. Declaration [CanBeNull] public ReliableQueueKey ReliableQueueKey { get; } Property Value Type Description ReliableQueueKey The key identifying the reliable queue involved. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) Exceptions Type Condition System.ArgumentNullException The info parameter is null . | Improve this Doc View Source GetReliableQueueKey(ReliableQueueKey) Gets the reliable queue key, quoted if appropriate, or placeholders for special values. Declaration [NotNull] protected static string GetReliableQueueKey([CanBeNull] ReliableQueueKey reliableQueueKey) Parameters Type Name Description ReliableQueueKey reliableQueueKey The reliable queue key, can be null . Returns Type Description System.String The reliable queue key, quoted if appropriate, or placeholders for special values. Implements System.Runtime.Serialization.ISerializable See Also ReliableQueueException"
  },
  "api/OpenCollar.Azure.ReliableQueue.IReliableQueueService.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.IReliableQueueService.html",
    "title": "Interface IReliableQueueService | API Documentation",
    "keywords": "Interface IReliableQueueService The public interface of the service used to coordinate the sending and receiving of messages using Azure Storage Queues. Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueueService Properties | Improve this Doc View Source Item[ReliableQueueKey] Gets the IReliableQueue object for the reliable queue with the specified reliable queue key. Declaration [NotNull] IReliableQueue this[[NotNull] ReliableQueueKey reliableQueueKey] { get; } Parameters Type Name Description ReliableQueueKey reliableQueueKey The key for the reliable queue for which to return the object. Property Value Type Description IReliableQueue The IReliableQueue object requested. Exceptions Type Condition System.ArgumentNullException reliableQueueKey was null . Methods | Improve this Doc View Source OnReceivedAsync(String, Nullable<TimeSpan>, Nullable<CancellationToken>) Called when a trigger (e.g. EventGrid or StorageQueue) receives a notification of a message to be processed. Declaration Task OnReceivedAsync([NotNull] string base64, TimeSpan? timeout = default(TimeSpan? ), [CanBeNull] CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.String base64 The Base-64 encoded JSON representation of the serialized message. System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to process the message before failing with an error. Defaults to the value in the DefaultTimeoutSeconds property of the queue configuration. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to process the message. Defaults to null , meaning there can be no cancellation. Returns Type Description System.Threading.Tasks.Task A task that processes the message supplied. Exceptions Type Condition System.ArgumentNullException base64 was null . System.ArgumentException base64 was zero-length or contains only white-space characters. | Improve this Doc View Source Unsubscribe(SubscriptionToken) Unsubscribes from the reliable queue by the token given. Declaration bool Unsubscribe([NotNull] SubscriptionToken token) Parameters Type Name Description SubscriptionToken token The token returned by Subscribe(EventHandler<ReceivedMessageEventArgs>) when the subscription was created. Returns Type Description System.Boolean true if the subscription was found and unsubscribed; otherwise, false if there was no subscription to remove. Exceptions Type Condition System.ArgumentNullException token was null ."
  },
  "api/OpenCollar.Azure.ReliableQueue.MessageStateException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.MessageStateException.html",
    "title": "Class MessageStateException | API Documentation",
    "keywords": "Class MessageStateException An exception thrown when a message is not in the expected state. Inheritance System.Object System.Exception ReliableQueueException MessageException MessageStateException Implements System.Runtime.Serialization.ISerializable Inherited Members MessageException.MessageId MessageException.GetMessageId(Guid) ReliableQueueException.ReliableQueueKey ReliableQueueException.GetReliableQueueKey(ReliableQueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class MessageStateException : MessageException, ISerializable Constructors | Improve this Doc View Source MessageStateException(ReliableQueueKey, Guid, MessageState, MessageState) Initializes a new instance of the MessageException class. Declaration public MessageStateException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId, MessageState expectedState, MessageState actualState) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. | Improve this Doc View Source MessageStateException(ReliableQueueKey, Guid, MessageState, MessageState, String) Initializes a new instance of the MessageException class with a specified error message. Declaration public MessageStateException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId, MessageState expectedState, MessageState actualState, string message) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. System.String message The message that describes the error. | Improve this Doc View Source MessageStateException(ReliableQueueKey, Guid, MessageState, MessageState, String, Exception) Initializes a new instance of the MessageException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MessageStateException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId, MessageState expectedState, MessageState actualState, string message, Exception innerException) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. MessageState expectedState The state that was expected. MessageState actualState The actual state of the message. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source MessageStateException(SerializationInfo, StreamingContext) Initializes a new instance of the MessageException class with serialized data. Declaration protected MessageStateException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null . System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). Properties | Improve this Doc View Source ActualState Gets the actual state of the message. Declaration public MessageState ActualState { get; } Property Value Type Description MessageState The actual state of the message. | Improve this Doc View Source ExpectedState Gets the state that was expected. Declaration public MessageState ExpectedState { get; } Property Value Type Description MessageState The state that was expected. Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides MessageException.GetObjectData(SerializationInfo, StreamingContext) Exceptions Type Condition System.ArgumentNullException The info parameter is null . Implements System.Runtime.Serialization.ISerializable See Also MessageException"
  },
  "api/OpenCollar.Azure.ReliableQueue.MessageException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.MessageException.html",
    "title": "Class MessageException | API Documentation",
    "keywords": "Class MessageException A class used to represent an exception that occurs involving a message in a queue. Inheritance System.Object System.Exception ReliableQueueException MessageException MessageStateException Implements System.Runtime.Serialization.ISerializable Inherited Members ReliableQueueException.ReliableQueueKey ReliableQueueException.GetReliableQueueKey(ReliableQueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class MessageException : ReliableQueueException, ISerializable Constructors | Improve this Doc View Source MessageException(ReliableQueueKey, Guid) Initializes a new instance of the MessageException class. Declaration public MessageException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. | Improve this Doc View Source MessageException(ReliableQueueKey, Guid, String) Initializes a new instance of the MessageException class with a specified error message. Declaration public MessageException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId, string message) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. System.String message The message that describes the error. | Improve this Doc View Source MessageException(ReliableQueueKey, Guid, String, Exception) Initializes a new instance of the MessageException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public MessageException([NotNull] ReliableQueueKey reliableQueueKey, Guid messageId, string message, Exception innerException) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.Guid messageId The ID of the message involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source MessageException(SerializationInfo, StreamingContext) Initializes a new instance of the MessageException class with serialized data. Declaration protected MessageException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null . System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). Properties | Improve this Doc View Source MessageId Gets the ID of the message involved. Declaration public Guid MessageId { get; } Property Value Type Description System.Guid The ID of the message involved. Methods | Improve this Doc View Source GetMessageId(Guid) Gets the message ID, quoted if appropriate, or placeholders for special values. Declaration [NotNull] protected static string GetMessageId(Guid messageId) Parameters Type Name Description System.Guid messageId The reliable queue key, can be empty. Returns Type Description System.String The message ID, quoted if appropriate, or placeholders for special values. | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) When overridden in a derived class, sets the System.Runtime.Serialization.SerializationInfo with information about the exception. Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Overrides ReliableQueueException.GetObjectData(SerializationInfo, StreamingContext) Exceptions Type Condition System.ArgumentNullException The info parameter is null . Implements System.Runtime.Serialization.ISerializable See Also ReliableQueueException"
  },
  "api/OpenCollar.Azure.ReliableQueue.UnknownReliableQueueException.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.UnknownReliableQueueException.html",
    "title": "Class UnknownReliableQueueException | API Documentation",
    "keywords": "Class UnknownReliableQueueException A class used to represent an exception that occurs when a reliable queue or its configuration cannot be found. Inheritance System.Object System.Exception ReliableQueueException UnknownReliableQueueException Implements System.Runtime.Serialization.ISerializable Inherited Members ReliableQueueException.ReliableQueueKey ReliableQueueException.GetObjectData(SerializationInfo, StreamingContext) ReliableQueueException.GetReliableQueueKey(ReliableQueueKey) Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax [Serializable] public class UnknownReliableQueueException : ReliableQueueException, ISerializable Constructors | Improve this Doc View Source UnknownReliableQueueException(ReliableQueueKey) Initializes a new instance of the UnknownReliableQueueException class. Declaration public UnknownReliableQueueException([NotNull] ReliableQueueKey reliableQueueKey) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. | Improve this Doc View Source UnknownReliableQueueException(ReliableQueueKey, String) Initializes a new instance of the UnknownReliableQueueException class with a specified error message. Declaration public UnknownReliableQueueException([NotNull] ReliableQueueKey reliableQueueKey, string message) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.String message The message that describes the error. | Improve this Doc View Source UnknownReliableQueueException(ReliableQueueKey, String, Exception) Initializes a new instance of the UnknownReliableQueueException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public UnknownReliableQueueException([NotNull] ReliableQueueKey reliableQueueKey, string message, Exception innerException) Parameters Type Name Description ReliableQueueKey reliableQueueKey The key identifying the reliable queue involved. System.String message The error message that explains the reason for the exception. System.Exception innerException The exception that is the cause of the current exception, or null if no inner exception is specified. | Improve this Doc View Source UnknownReliableQueueException(SerializationInfo, StreamingContext) Initializes a new instance of the UnknownReliableQueueException class with serialized data. Declaration protected UnknownReliableQueueException([NotNull] SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. System.Runtime.Serialization.StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. Exceptions Type Condition System.ArgumentNullException The info parameter is null . System.Runtime.Serialization.SerializationException The class name is null or System.Exception.HResult is zero (0). Implements System.Runtime.Serialization.ISerializable See Also ReliableQueueException"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.ReliableQueueKeyConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.ReliableQueueKeyConverter.html",
    "title": "Class ReliableQueueKeyConverter | API Documentation",
    "keywords": "Class ReliableQueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. Inheritance System.Object System.Text.Json.Serialization.JsonConverter System.Text.Json.Serialization.JsonConverter < ReliableQueueKey > ReliableQueueKeyConverter Inherited Members System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.CanConvert(System.Type) Namespace : OpenCollar.Azure.ReliableQueue.Model.Text.Json Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class ReliableQueueKeyConverter : JsonConverter<ReliableQueueKey> Properties | Improve this Doc View Source Instance Gets a common instance of the converter that can be reused as necessary. Declaration [NotNull] public static ReliableQueueKeyConverter Instance { get; } Property Value Type Description ReliableQueueKeyConverter A common instance of the converter that can be reused as necessary. Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type ReliableQueueKey . Declaration public override ReliableQueueKey Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonReader reader The reader. System.Type typeToConvert The type to convert. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Returns Type Description ReliableQueueKey The converted value. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions) | Improve this Doc View Source Write(Utf8JsonWriter, ReliableQueueKey, JsonSerializerOptions) Writes a specified value as JSON. Declaration public override void Write(Utf8JsonWriter writer, ReliableQueueKey value, JsonSerializerOptions options) Parameters Type Name Description System.Text.Json.Utf8JsonWriter writer The writer to write to. ReliableQueueKey value The value to convert to JSON. System.Text.Json.JsonSerializerOptions options An object that specifies serialization options to use. Overrides System.Text.Json.Serialization.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey>.Write(System.Text.Json.Utf8JsonWriter, OpenCollar.Azure.ReliableQueue.Model.ReliableQueueKey, System.Text.Json.JsonSerializerOptions) See Also ReliableQueueKey"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.TopicConverter.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Newtonsoft.TopicConverter.html",
    "title": "Class TopicConverter | API Documentation",
    "keywords": "Class TopicConverter A converter that ensures that reliable queue topics are represented in the correct format. Inheritance System.Object Newtonsoft.Json.JsonConverter Newtonsoft.Json.JsonConverter < Topic > TopicConverter Inherited Members Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Namespace : OpenCollar.Azure.ReliableQueue.Model.Newtonsoft Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class TopicConverter : JsonConverter<Topic> Properties | Improve this Doc View Source Instance Gets a common instance of the converter that can be reused as necessary. Declaration [NotNull] public static TopicConverter Instance { get; } Property Value Type Description TopicConverter A common instance of the converter that can be reused as necessary. Methods | Improve this Doc View Source ReadJson(JsonReader, Type, Topic, Boolean, JsonSerializer) Reads the JSON representation of the object. Declaration public override Topic ReadJson(JsonReader reader, Type objectType, Topic existingValue, bool hasExistingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. System.Type objectType Type of the object. Topic existingValue The existing value of object being read. If there is no existing value then null will be used. System.Boolean hasExistingValue The existing value has a value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Topic The object value. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, OpenCollar.Azure.ReliableQueue.Model.Topic, System.Boolean, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException reader is null . | Improve this Doc View Source WriteJson(JsonWriter, Topic, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, Topic value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Topic value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter<OpenCollar.Azure.ReliableQueue.Model.Topic>.WriteJson(Newtonsoft.Json.JsonWriter, OpenCollar.Azure.ReliableQueue.Model.Topic, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition System.ArgumentNullException writer is null . See Also Topic"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "OpenCollar.Azure.ReliableQueue This library provides a reliable messaging service using Azure Storage Accounts. Features included guaranteed ordering within topics and guaranteed delivery. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Azure.ReliableQueue/"
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueuesConfiguration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueuesConfiguration.html",
    "title": "Interface IReliableQueuesConfiguration | API Documentation",
    "keywords": "Interface IReliableQueuesConfiguration The root configuration object in which all configuration for reliable queues is defined. Inherited Members OpenCollar.Extensions.Configuration.IConfigurationObject.Delete() OpenCollar.Extensions.Configuration.IConfigurationObject.Load() OpenCollar.Extensions.Configuration.IConfigurationObject.Save() OpenCollar.Extensions.Configuration.IConfigurationObject.IsDirty System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Azure.ReliableQueue.Configuration Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueuesConfiguration : IConfigurationObject, IDisposable, INotifyPropertyChanged Properties | Improve this Doc View Source Queues Gets or sets a dictionary of the configuration for the individual reliable queues. Declaration [Path(PathIs.Absolute, \"ReliableQueues:Queues\")] IConfigurationDictionary<IReliableQueueConfiguration> Queues { get; set; } Property Value Type Description OpenCollar.Extensions.Configuration.IConfigurationDictionary < IReliableQueueConfiguration > The dictionary of the configuration for the individual reliable queues. See Also OpenCollar.Extensions.Configuration.IConfigurationObject"
  },
  "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueueConfiguration.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Configuration.IReliableQueueConfiguration.html",
    "title": "Interface IReliableQueueConfiguration | API Documentation",
    "keywords": "Interface IReliableQueueConfiguration The configuration for a single reliable queue. Inherited Members OpenCollar.Extensions.Configuration.IConfigurationObject.Delete() OpenCollar.Extensions.Configuration.IConfigurationObject.Load() OpenCollar.Extensions.Configuration.IConfigurationObject.Save() OpenCollar.Extensions.Configuration.IConfigurationObject.IsDirty System.IDisposable.Dispose() System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : OpenCollar.Azure.ReliableQueue.Configuration Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public interface IReliableQueueConfiguration : IConfigurationObject, IDisposable, INotifyPropertyChanged Fields | Improve this Doc View Source ModeBoth The value to assign to the Mode property if the service should be permitted to both send and receive messages. Declaration [NotNull] public const string ModeBoth = \"Both\" Field Value Type Description System.String | Improve this Doc View Source ModeReceive The value to assign to the Mode property if the service should be permitted to receive messages. Declaration [NotNull] public const string ModeReceive = \"Receive\" Field Value Type Description System.String | Improve this Doc View Source ModeSend The value to assign to the Mode property if the service should be permitted to send messages. Declaration [NotNull] public const string ModeSend = \"Send\" Field Value Type Description System.String Properties | Improve this Doc View Source CreateListener Gets or sets a flag that indicates that a listener should be created, or whether the host will receive messages using functions. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = false)] [Path(PathIs.Relative, \"CreateListener\")] bool CreateListener { get; set; } Property Value Type Description System.Boolean A flag that is set to true if a listener should be created; otherwise, false if the host will receive messages using functions. Remarks By default this value is set to false and the consumer must provide events. | Improve this Doc View Source DefaultTimeoutSeconds Gets or sets the default timeout when sending a message. Measured in seconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 30)] [Path(PathIs.Relative, \"DefaultTimeoutSeconds\")] int DefaultTimeoutSeconds { get; set; } Property Value Type Description System.Int32 The default timeout when sending a message. Measured in seconds. | Improve this Doc View Source IsEnabled Gets or sets a flag that indicates this queue is enabled. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = true)] [Path(PathIs.Relative, \"IsEnabled\")] bool IsEnabled { get; set; } Property Value Type Description System.Boolean A flag that is set to true the queue will be available for use in code; otherwise, false if will not be initialized and may cause errors if any attempt is made to use it. Remarks By default this value is set to true . | Improve this Doc View Source MaxAttempts Get or set the maximum number of delivery attempts permitted before the message is moved to the poison reliable queue. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 3)] [Path(PathIs.Relative, \"MaxAttempts\")] int MaxAttempts { get; set; } Property Value Type Description System.Int32 The maximum number of delivery attempts permitted before the message is moved to the poison reliable queue. | Improve this Doc View Source MessageTimeToLiveSeconds Gets or sets the maximum period of time a message can remain on a queue before it is deleted without being processed. Measured in seconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 172800)] [Path(PathIs.Relative, \"MessageTimeToLiveSeconds\")] int MessageTimeToLiveSeconds { get; set; } Property Value Type Description System.Int32 The maximum period of time a message can remain on a queue before it is deleted without being processed. Measured in seconds. | Improve this Doc View Source Mode Gets or sets a value used to determine whether messages can be sent or received from the connection. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly)] [Path(PathIs.Relative, \"Mode\")] string Mode { get; set; } Property Value Type Description System.String The value used to determine whether messages can be sent or received from the connection. Value Description Receive Messages can be received by the service, but not sent. This is the default value. Send Messages can be sent by the service, but not received. Both Messages can be both sent and received by the service. Only these two values are valid. Sending and receiving services are mutually exclusive. The constants ModeSend , ModeReceive and ModeBoth can be used to refer to these values programmatically. | Improve this Doc View Source SlidingWindowDurationSeconds Gets or sets the sliding window duration when receiving messages. Measured in seconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 1)] [Path(PathIs.Relative, \"SlidingWindowDurationSeconds\")] int SlidingWindowDurationSeconds { get; set; } Property Value Type Description System.Int32 The sliding window duration when receiving messages. Measured in seconds. Remarks This determines for how long messages are buffered before the consumer is notified. This allows out-of-order messages to be re-ordered correctly. | Improve this Doc View Source StorageConnectionString Gets or sets the connection string for the storage service on which the leases and blobs are hosted. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = null)] [Path(PathIs.Relative, \"StorageConnectionString\")] string StorageConnectionString { get; set; } Property Value Type Description System.String The connection string for the storage service on which the leases and blobs are hosted. Remarks If this is left undefined or null it is assumed that it is a receive-only connection and the host will be using the OnReceivedAsync(String, Nullable<TimeSpan>, Nullable<CancellationToken>) method to pass messages received using an Event Grid function or similar. | Improve this Doc View Source TopicAffinityTtlSeconds Gets or sets the topic affinity time-to-live when receiving messages. Measured in seconds. Declaration [Configuration(Persistence = ConfigurationPersistenceActions.LoadOnly, DefaultValue = 30)] [Path(PathIs.Relative, \"TopicAffinityTtlSeconds\")] int TopicAffinityTtlSeconds { get; set; } Property Value Type Description System.Int32 The topic affinity time-to-live when receiving messages. Measured in seconds. Remarks This determines how long after the last message on a topic is received that the endpoint that previously processed those message should be preferred over others. See Also OpenCollar.Extensions.Configuration.IConfigurationObject"
  },
  "api/OpenCollar.Azure.ReliableQueue.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue Classes MessageException A class used to represent an exception that occurs involving a message in a queue. MessageStateException An exception thrown when a message is not in the expected state. ReceivedMessageEventArgs The arguments provided for events involving a received message. ReliableQueueException A class used to represent an exception involving a reliable queue. ServiceCollectionExtensions Extensions to the Microsoft.Extensions.DependencyInjection.IServiceCollection type allowing reliable queue services to be registered. UnknownReliableQueueException A class used to represent an exception that occurs when a reliable queue or its configuration cannot be found. Interfaces IReliableQueue The public interface of the object representing a reliable queue. IReliableQueueService The public interface of the service used to coordinate the sending and receiving of messages using Azure Storage Queues."
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.Text.Json.html",
    "title": "Namespace OpenCollar.Azure.ReliableQueue.Model.Text.Json | API Documentation",
    "keywords": "Namespace OpenCollar.Azure.ReliableQueue.Model.Text.Json Classes ReliableQueueKeyConverter A converter that ensures that reliable queue keys are represented in the correct format. TopicConverter A converter that ensures that reliable queue topics are represented in the correct format."
  },
  "api/OpenCollar.Azure.ReliableQueue.ReceivedMessageEventArgs.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.ReceivedMessageEventArgs.html",
    "title": "Class ReceivedMessageEventArgs | API Documentation",
    "keywords": "Class ReceivedMessageEventArgs The arguments provided for events involving a received message. Inheritance System.Object System.EventArgs System.ComponentModel.HandledEventArgs ReceivedMessageEventArgs Inherited Members System.ComponentModel.HandledEventArgs.Handled System.EventArgs.Empty Namespace : OpenCollar.Azure.ReliableQueue Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class ReceivedMessageEventArgs : HandledEventArgs Properties | Improve this Doc View Source reliableQueueKey Gets the key identifying the queue from which the message was delivered. Declaration public ReliableQueueKey reliableQueueKey { get; } Property Value Type Description ReliableQueueKey The key identifying the queue from which the message was delivered. | Improve this Doc View Source Size Gets or sets the size of the message, measured in bytes. Declaration public long? Size { get; } Property Value Type Description System.Nullable < System.Int64 > The size of the message, in bytes, or null if the message is empty or not yet been supplied. | Improve this Doc View Source Topic Get the key used to identify messages that are related to one-another. These are guaranteed to be delivered sequentially and in order. Declaration public Topic Topic { get; } Property Value Type Description Topic The key used to identify messages that are related to one-another. These are guaranteed to be delivered sequentially and in order. Methods | Improve this Doc View Source GetBodyAsBufferAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) Gets the body as an array of bytes, asynchronously. Declaration [CanBeNull] public Task<byte[]> GetBodyAsBufferAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.Byte []> A task that returns the message body as an array of bytes (or null if the message had no body). | Improve this Doc View Source GetBodyAsStreamAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) Gets the body as a stream, asynchronously. Declaration [CanBeNull] public Task<Stream> GetBodyAsStreamAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.IO.Stream > A task that returns the message body as a stream (or null if the message had no body). Remarks The caller is responsible for disposing of the stream. | Improve this Doc View Source GetBodyAsStringAsync(Nullable<TimeSpan>, Nullable<CancellationToken>) Gets the body as a string, asynchronously. Declaration [CanBeNull] public Task<string> GetBodyAsStringAsync(TimeSpan? timeout = default(TimeSpan? ), CancellationToken? cancellationToken = default(CancellationToken? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout The maximum period of time to wait whilst attempting to read the message body to the BLOB storage before failing with an error. System.Nullable < System.Threading.CancellationToken > cancellationToken A cancellation token that can be used to abandon the attempt to read the message body to the BLOB storage. Returns Type Description System.Threading.Tasks.Task < System.String > A task that returns the message body as a string (or null if the message had no body). See Also System.ComponentModel.HandledEventArgs"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.SubscriptionToken.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.SubscriptionToken.html",
    "title": "Class SubscriptionToken | API Documentation",
    "keywords": "Class SubscriptionToken A token used to represent an individual subscription to callbacks for messages arriving on a reliable queue. Inheritance System.Object OpenCollar.Extensions.Disposable SubscriptionToken Implements System.IDisposable Inherited Members OpenCollar.Extensions.Disposable.Dispose() OpenCollar.Extensions.Disposable.CheckNotDisposed() Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public sealed class SubscriptionToken : Disposable, IDisposable Properties | Improve this Doc View Source Id Gets an ID that uniquely identifies this subscription. Declaration public Guid Id { get; } Property Value Type Description System.Guid The ID that uniquely identifies this subscription. Methods | Improve this Doc View Source Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides OpenCollar.Extensions.Disposable.Dispose(System.Boolean) Implements System.IDisposable See Also OpenCollar.Extensions.Disposable"
  },
  "api/OpenCollar.Azure.ReliableQueue.Model.MessageState.html": {
    "href": "api/OpenCollar.Azure.ReliableQueue.Model.MessageState.html",
    "title": "Enum MessageState | API Documentation",
    "keywords": "Enum MessageState Defines the potential states in which a record may be. Namespace : OpenCollar.Azure.ReliableQueue.Model Assembly : OpenCollar.Azure.ReliableQueue.dll Syntax public enum MessageState Fields Name Description Failed The message has failed processing too many times and is being moved to the dead letter queue. New The message has been passed from the sender to the service, but not yet processed. Processing The message has been dequeued and is being processed by the recipient. Queued The message has been queued and is ready for receipt. Unknown The state of the message is unknown or undefined. This is a sentinel used to detect unset values and will normally result in an exception being thrown."
  }
}